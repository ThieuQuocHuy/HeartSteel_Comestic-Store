using System;
using System.Threading.Tasks;
using System.Windows.Forms;
using BLL.Services;

namespace Presentation.Pages.Customer
{
    public partial class LoginForm : Form
    {
        private readonly IAuthService _authService;

        public LoginForm()
        {
            InitializeComponent();
            var userRepository = new DAL.Repositories.UserRepository();
            _authService = new AuthService(userRepository);
        }

        private async void buttonLogin_Click(object sender, EventArgs e)
        {
            try
            {
                buttonLogin.Enabled = false;
                buttonLogin.Text = "ƒêang ƒëƒÉng nh·∫≠p...";

                var username = textBoxUsername.Text.Trim();
                var password = textBoxPassword.Text;

                var (success, user, message) = await _authService.LoginAsync(username, password);

                if (success && user != null)
                {
                    // L∆∞u session ng∆∞·ªùi d√πng tr∆∞·ªõc khi ki·ªÉm tra role
                    Presentation.Auth.UserSession.SetUser(user);
                    System.Diagnostics.Trace.WriteLine($"[LOGIN] userId={user.UserId}, name={user.Fullname}");

                    // Ki·ªÉm tra role v√† chuy·ªÉn h∆∞·ªõng
                    var isAdmin = await _authService.IsAdminAsync(user.UserId);

                    if (isAdmin)
                    {
                        // ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn AdminHomePage
                        Presentation.Navigation.Navigator.Navigate(new Admin.AdminHomePage());
                    }
                    else
                    {
                        // ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn trang kh√°ch h√†ng
                        Presentation.Navigation.Navigator.Navigate(new HomePage());
                    }
                }
                else
                {
                    MessageBox.Show($"{message}\n\nüí° T√†i kho·∫£n m·∫∑c ƒë·ªãnh:\n- Admin: username=admin, password=admin123\n- Customer: username=customer, password=123456", "L·ªói ƒëƒÉng nh·∫≠p", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"L·ªói: {ex.Message}", "L·ªói", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            finally
            {
                buttonLogin.Enabled = true;
                buttonLogin.Text = "ƒêƒÉng nh·∫≠p";
            }
        }

        private void buttonRegister_Click(object sender, EventArgs e)
        {
            var registerForm = new RegisterForm();
            registerForm.ShowDialog(this);
        }

        private void textBoxPassword_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == (char)Keys.Enter)
            {
                buttonLogin_Click(sender, e);
            }
        }

        private void textBoxUsername_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == (char)Keys.Enter)
            {
                textBoxPassword.Focus();
            }
        }
    }
}